---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ecr-credential-rotate
  namespace: fiwoo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: fiwoo
  name: fiwoo-secrets
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fiwoo-secrets
  namespace: fiwoo
subjects:
  - kind: ServiceAccount
    name: ecr-credential-rotate
    namespace: fiwoo
roleRef:
  kind: Role
  name: fiwoo-secrets
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  name: aws-ecr-credentials
  namespace: fiwoo
type: Opaque
stringData:
  AWS_ACCESS_KEY: _AWS_ACCESS_KEY_
  AWS_SECRET_KEY: _AWS_SECRET_KEY_
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: aws-registry-credential-cron
  namespace: fiwoo
spec:
  schedule: "0 */8 * * *"
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2  
  jobTemplate:
    spec:
      backoffLimit: 4
      template:
        spec:
          serviceAccountName: ecr-credential-rotate
          terminationGracePeriodSeconds: 0
          restartPolicy: Never
          containers:
          - name: kubectl
            imagePullPolicy: IfNotPresent
            image: ansuan/aws-kubectl:latest
            env: 
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: aws-ecr-credentials
                    key: AWS_ACCESS_KEY
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: aws-ecr-credentials
                    key: AWS_SECRET_KEY
              - name: AWS_DEFAULT_REGION
                value: "eu-west-1"
            command:
            - "/bin/sh"
            - "-c"
            - |
              AWS_ACCOUNT=_AWS_ID_ACCOUNT_
              AWS_REGION=eu-west-1
              DOCKER_REGISTRY_SERVER=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com
              DOCKER_USER=AWS
              DOCKER_PASSWORD=`aws ecr get-login --region ${AWS_REGION} --registry-ids ${AWS_ACCOUNT} | cut -d' ' -f6`

              kubectl -n fiwoo delete secret regcred || true
              kubectl -n fiwoo create secret docker-registry regcred \
              --docker-server=$DOCKER_REGISTRY_SERVER \
              --docker-username=$DOCKER_USER \
              --docker-password=$DOCKER_PASSWORD \
              --docker-email=no@email.local

              #kubectl patch serviceaccount default -p '{"imagePullSecrets":[{"name":"aws-registry"}]}'